name: Release
on:
  push:
    tags:
      - "*"
  pull_request: # debug
permissions:
  contents: write
jobs:
  release-binary:
    strategy:
      fail-fast: false # debug
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    runs-on: ${{ (matrix.os != 'darwin' && 'ubuntu-latest') || 'macos-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # --------- setup cross compilers ---------
      - name: Install cross-compilers
        run: |
          if [ "${{ matrix.os }}" == "linux" ]; then
            sudo apt-get install gcc-aarch64-linux-gnu
          elif [ "${{ matrix.os }}" == "windows" ]; then
            sudo apt-get install gcc-mingw-w64-x86-64
          fi
      # --------- setup rust ---------
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Add Rust targets
        run: |
          if [ "${{ matrix.os }}" == "darwin" ]; then
            rustup target add x86_64-apple-darwin
            rustup target add aarch64-apple-darwin
          elif [ "${{ matrix.os }}" == "windows" ]; then
            rustup target add x86_64-pc-windows-gnu
          fi
      - name: Setup cross toolchain
        run: cargo install cross
      # --------- setup go ---------
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      # --------- goreleaser ---------
      - name: Release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          #          args: release --clean --config .goreleaser-${{ matrix.os }}-${{ matrix.arch }}.yaml
          args: build --skip validate --clean --config .goreleaser-${{ matrix.os }}-${{ matrix.arch }}.yaml # debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
