name: Release
on:
  push:
    tags:
      - "*"
  pull_request: # debug
permissions:
  contents: write
  id-token: write
  attestations: write
jobs:
  #  release-binary:
  #    strategy:
  #      # fail-fast: false # debug
  #      matrix:
  #        os: [linux, darwin, windows]
  #        arch: [amd64, arm64]
  #        exclude:
  #          - os: windows
  #            arch: arm64
  #    runs-on: ${{ (matrix.os != 'darwin' && 'ubuntu-latest') || 'macos-latest' }}
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v4
  #        with:
  #          fetch-depth: 0
  #      # --------- setup cross compilers ---------
  #      - name: Install cross-compilers
  #        run: |
  #          if [ "${{ matrix.os }}" == "linux" ]; then
  #            sudo apt-get install gcc-aarch64-linux-gnu
  #          elif [ "${{ matrix.os }}" == "windows" ]; then
  #            sudo apt-get install gcc-mingw-w64-x86-64
  #          fi
  #      # --------- setup rust ---------
  #      - name: Setup Rust
  #        uses: actions-rust-lang/setup-rust-toolchain@v1
  #        with:
  #          toolchain: stable
  #          cache: true
  #          cache-workspaces: ./lib/system
  #          cache-key: ${{ runner.os }}
  #      - name: Add Rust targets
  #        run: |
  #          if [ "${{ matrix.os }}" == "darwin" ]; then
  #            rustup target add x86_64-apple-darwin
  #            rustup target add aarch64-apple-darwin
  #          elif [ "${{ matrix.os }}" == "windows" ]; then
  #            rustup target add x86_64-pc-windows-gnu
  #          fi
  #      - name: Setup cross toolchain
  #        run: cargo install cross
  #      # --------- setup go ---------
  #      - name: Set up Go
  #        uses: actions/setup-go@v5
  #        with:
  #          go-version: stable
  #      # --------- goreleaser ---------
  #      - name: Release
  #        uses: goreleaser/goreleaser-action@v6
  #        with:
  #          distribution: goreleaser
  #          version: "~> v2"
  #          args: release --clean --config .goreleaser-${{ matrix.os }}-${{ matrix.arch }}.yaml
  #          # args: build --skip validate --clean --config .goreleaser-${{ matrix.os }}-${{ matrix.arch }}.yaml # debug
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  attestation:
    runs-on: ubuntu-latest
    #    needs: release-binary
    steps:
      - name: Set tag name
        id: name
        run: |
          TAG_NAME="${{ github.ref_name }}"
          TAG_NAME="v0.8.0"  # debug
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
      # --------- attestation ---------
      - uses: robinraju/release-downloader@v1
        with:
          tag: ${{ steps.name.outputs.TAG_NAME }}
          fileName: "*"
      - name: Generate checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          patterns: |
            ./*.tar.gz
      - name: Debug
        run: tree
      - name: Upload checksum.txt to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: checksum.txt
          asset_name: checksum.txt
          tag: ${{ steps.name.outputs.TAG_NAME }}
          overwrite: true
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: . # trigger
